{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\crist\\\\e-port 2.0\\\\E-Port\\\\frontend\\\\src\\\\Elements.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react'; // For Functions\nimport { Offcanvas, Navbar, Alert, Nav } from 'react-bootstrap'; // Elements from Bootstrap\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Elements() {\n  _s();\n  const [show, setShow] = useState(false); // Set initial state to false \n  const handleClose = () => setShow(false); // OffCanvas closing\n  const handleShow = () => setShow(true); // Offcanvas opening\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      id: \"Bar\",\n      bg: \"dark\",\n      \"data-bs-theme\": \"dark\",\n      children: [/*#__PURE__*/_jsxDEV(Navbar.Brand, {\n        onClick: handleShow,\n        children: \"All ports\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Nav, {\n        className: \"me-auto\",\n        children: [/*#__PURE__*/_jsxDEV(Nav.Link, {\n          href: \"#home\",\n          children: \"Home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Nav.Link, {\n          href: \"/quiz\",\n          children: \"Security Quiz\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Offcanvas, {\n      show: show,\n      onHide: handleClose,\n      children: [/*#__PURE__*/_jsxDEV(Offcanvas.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Offcanvas.Title, {\n          children: \"Ports and their meanings:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Offcanvas.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Alert, {\n          variant: \"success\",\n          children: \"If you test a website adress, the scan will probably say 'Not secured' because we don't actually know the protection protocols of every website. An opened port could be intentionally placed, as a honeypot. We're just telling you that if you're having a website, the security risks you're exposed to.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Alert, {\n          variant: \"info\",\n          children: \"PORT 53: (Phone / PC): You most probably have a dynamic IP Adress, so as long you're DDoSed you should just restart the router. \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Alert, {\n          variant: \"dark\",\n          children: \" PORT: 31337 (Server/Phone/PC and even Network) I'm sorry to say this, but your data could be already for sale on the dark-web.. Someone who actually knows how to acces and maybe even create this port, it's most probably a system / network engineer, and maybe, a dark-hat hacker. So, beware, and maybe try going to police if you see this port opened on your external / internal IP Adress. (31337 = ELITE) \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Alert, {\n          variant: \"danger\",\n          children: [\"PORTS 20 and 21(SERVERS): File Transfer Protocol (FTP). FTP is for transferring files between a client and a server.\", /*#__PURE__*/_jsxDEV(\"ul\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 25\n          }, this), \"You are actually really vulnerable to many types of attacks by having these ports opened on a server.  Buy some protection. \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Alert, {\n          variant: \"danger\",\n          children: \"PORT 22, 139 and 137: (SERVERS / PC): Secure Shell (SSH). SSH is a secure protocol used as the primary means of connecting to Linux servers remotely. Beware, this is really dangerous. \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Alert, {\n          variant: \"danger\",\n          children: \"PORT 23: (SERVERS / PC): Telnet. Telnet is a protocol that allows you to connect to remote computers (called hosts) over a TCP/IP network (such as the internet).\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Alert, {\n          variant: \"danger\",\n          children: \"PORT 25: (SERVERS / PC): Simple Mail Transfer Protocol (SMTP). SMTP is used for sending and receiving email. \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Alert, {\n          variant: \"danger\",\n          children: \"PORT 69: (SERVERS / PC): Trivial File Transfer Protocol (TFTP). TFTP is a simpler version of FTP that doesn\\u2019t require a username/password to transfer files. This is very common in unethical hacking. \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Alert, {\n          variant: \"danger\",\n          children: \"PORT 80: (SERVERS / PC / Phone): Hypertext Transfer Protocol (HTTP). HTTP is the protocol used to transfer data over the web. \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Alert, {\n          variant: \"danger\",\n          children: \"PORT 443 and 8443: (SERVERS / PC / Phone): HTTP Secure (HTTPS). HTTPS is the secure version of HTTP, and is used for secure communication over a computer network, and is widely used on the internet. \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Alert, {\n          variant: \"danger\",\n          children: \"PORT 445: (SERVERS / PC): Server Message Block (SMB). SMB is a network file sharing protocol. This script can block any 2FA / 2nd confirmation. But don't worry if it's opened on a router's internal IP, because those are normal protocols that are usually protected. \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Alert, {\n          variant: \"danger\",\n          children: \"PORT 3389: (SERVERS / PC): Remote Desktop Protocol (RDP). RDP is a proprietary protocol developed by Microsoft for connecting to another computer with a graphical interface over a network connection. Basically, legal hacking but without you actually knowing it. \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Alert, {\n          variant: \"danger\",\n          children: \"PORT 1433: (SERVERS / PC): Microsoft SQL Server. SQL Server is a relational database management system developed by Microsoft. The SQL can be injected with various viruses or hidden god-modes, so beware of your user data! \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(Elements, \"NKb1ZOdhT+qUsWLXSgjSS2bk2C4=\");\n_c = Elements;\nexport default Elements;\nvar _c;\n$RefreshReg$(_c, \"Elements\");","map":{"version":3,"names":["React","useState","Offcanvas","Navbar","Alert","Nav","jsxDEV","_jsxDEV","Fragment","_Fragment","Elements","_s","show","setShow","handleClose","handleShow","children","id","bg","Brand","onClick","fileName","_jsxFileName","lineNumber","columnNumber","className","Link","href","onHide","Header","closeButton","Title","Body","variant","_c","$RefreshReg$"],"sources":["C:/Users/crist/e-port 2.0/E-Port/frontend/src/Elements.js"],"sourcesContent":["import React, { useState } from 'react'; // For Functions\r\nimport { Offcanvas, Navbar, Alert, Nav } from 'react-bootstrap'; // Elements from Bootstrap\r\n\r\nfunction Elements() {\r\n    const [show, setShow] = useState(false); // Set initial state to false \r\n    const handleClose = () => setShow(false); // OffCanvas closing\r\n    const handleShow = () => setShow(true);  // Offcanvas opening\r\n\r\n    return (\r\n        <>\r\n\r\n            <Navbar id=\"Bar\" bg=\"dark\" data-bs-theme=\"dark\">\r\n                <Navbar.Brand onClick={handleShow}>All ports</Navbar.Brand>\r\n                <Nav className=\"me-auto\">\r\n                    <Nav.Link href=\"#home\">Home</Nav.Link>\r\n                    <Nav.Link href=\"/quiz\">Security Quiz</Nav.Link>\r\n                </Nav>\r\n\r\n            </Navbar>\r\n\r\n\r\n            <Offcanvas show={show} onHide={handleClose}>\r\n                <Offcanvas.Header closeButton>\r\n                    <Offcanvas.Title>Ports and their meanings:</Offcanvas.Title>\r\n                </Offcanvas.Header>\r\n                <Offcanvas.Body>\r\n                    <Alert variant='success'>If you test a website adress, the scan will probably say 'Not secured' because we don't actually know the protection protocols of every website. An opened port could be intentionally placed, as a honeypot. We're just telling you that if you're having a website, the security risks you're exposed to.</Alert>\r\n                    <Alert variant='info'>PORT 53: (Phone / PC): You most probably have a dynamic IP Adress, so as long you're DDoSed you should just restart the router. </Alert>\r\n                    <Alert variant='dark'> PORT: 31337 (Server/Phone/PC and even Network) I'm sorry to say this, but your data could be already for sale on the dark-web.. Someone who actually knows how to acces and maybe even create this port, it's most probably a system / network engineer, and maybe, a dark-hat hacker. So, beware, and maybe try going to police if you see this port opened on your external / internal IP Adress. (31337 = ELITE) </Alert>\r\n                    <Alert variant='danger'>PORTS 20 and 21(SERVERS): File Transfer Protocol (FTP). FTP is for transferring files between a client and a server.\r\n                        <ul></ul>You are actually really vulnerable to many types of attacks by having these ports opened on a server.  Buy some protection. </Alert>\r\n                    <Alert variant='danger'>PORT 22, 139 and 137: (SERVERS / PC): Secure Shell (SSH). SSH is a secure protocol used as the primary means of connecting to Linux servers remotely. Beware, this is really dangerous. </Alert>\r\n                    <Alert variant='danger'>PORT 23: (SERVERS / PC): Telnet. Telnet is a protocol that allows you to connect to remote computers (called hosts) over a TCP/IP network (such as the internet).</Alert>\r\n                    <Alert variant='danger'>PORT 25: (SERVERS / PC): Simple Mail Transfer Protocol (SMTP). SMTP is used for sending and receiving email. </Alert>\r\n                    <Alert variant='danger'>PORT 69: (SERVERS / PC): Trivial File Transfer Protocol (TFTP). TFTP is a simpler version of FTP that doesn’t require a username/password to transfer files. This is very common in unethical hacking. </Alert>\r\n                    <Alert variant='danger'>PORT 80: (SERVERS / PC / Phone): Hypertext Transfer Protocol (HTTP). HTTP is the protocol used to transfer data over the web. </Alert>\r\n                    <Alert variant='danger'>PORT 443 and 8443: (SERVERS / PC / Phone): HTTP Secure (HTTPS). HTTPS is the secure version of HTTP, and is used for secure communication over a computer network, and is widely used on the internet. </Alert>\r\n                    <Alert variant='danger'>PORT 445: (SERVERS / PC): Server Message Block (SMB). SMB is a network file sharing protocol. This script can block any 2FA / 2nd confirmation. But don't worry if it's opened on a router's internal IP, because those are normal protocols that are usually protected. </Alert>\r\n                    <Alert variant='danger'>PORT 3389: (SERVERS / PC): Remote Desktop Protocol (RDP). RDP is a proprietary protocol developed by Microsoft for connecting to another computer with a graphical interface over a network connection. Basically, legal hacking but without you actually knowing it. </Alert>\r\n                    <Alert variant='danger'>PORT 1433: (SERVERS / PC): Microsoft SQL Server. SQL Server is a relational database management system developed by Microsoft. The SQL can be injected with various viruses or hidden god-modes, so beware of your user data! </Alert>\r\n                </Offcanvas.Body>\r\n            </Offcanvas>\r\n\r\n        </>\r\n\r\n    );\r\n}\r\n\r\nexport default Elements;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}