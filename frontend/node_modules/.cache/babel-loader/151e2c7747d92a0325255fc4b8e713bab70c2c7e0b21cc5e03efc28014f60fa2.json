{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\crist\\\\e-port 2.0\\\\E-Port\\\\frontend\\\\src\\\\Quiz.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MyComponent() {\n  _s();\n  const [form, setForm] = useState({\n    question: \"\",\n    answer: \"\"\n  });\n  const [dataToInsert, setDataToInsert] = useState(null);\n  const handleChange = event => {\n    setForm({\n      ...form,\n      [event.target.name]: event.target.value\n    });\n  };\n  const handleAddQuestion = () => {\n    setDataToInsert(form);\n    setForm({\n      question: \"\",\n      answer: \"\"\n    }); // Reset form\n  };\n\n  const handleInsert = async () => {\n    const {\n      question,\n      answer\n    } = dataToInsert;\n    const response = await fetch('http://localhost:3000/', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        question,\n        answer\n      })\n    });\n    if (response.ok) {\n      console.log('Data successfully inserted into the database');\n    } else {\n      console.error('Error inserting data into the database');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => e.preventDefault(),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"question\",\n        value: form.question,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"answer\",\n        value: form.answer,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleAddQuestion,\n        children: \"Add Question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), dataToInsert && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleInsert,\n      children: \"Insert into Database\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 30\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n_s(MyComponent, \"4yuw2l87IBsHNCnaIYvn65vNt8k=\");\n_c = MyComponent;\nexport default MyComponent;\nvar _c;\n$RefreshReg$(_c, \"MyComponent\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","MyComponent","_s","form","setForm","question","answer","dataToInsert","setDataToInsert","handleChange","event","target","name","value","handleAddQuestion","handleInsert","response","fetch","method","headers","body","JSON","stringify","ok","console","log","error","children","onSubmit","e","preventDefault","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/crist/e-port 2.0/E-Port/frontend/src/Quiz.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction MyComponent() {\r\n    const [form, setForm] = useState({ question: \"\", answer: \"\" });\r\n    const [dataToInsert, setDataToInsert] = useState(null);\r\n\r\n    const handleChange = (event) => {\r\n        setForm({\r\n            ...form,\r\n            [event.target.name]: event.target.value\r\n        });\r\n    };\r\n\r\n    const handleAddQuestion = () => {\r\n        setDataToInsert(form);\r\n        setForm({ question: \"\", answer: \"\" }); // Reset form\r\n    };\r\n\r\n    const handleInsert = async () => {\r\n        const { question, answer } = dataToInsert;\r\n\r\n        const response = await fetch('http://localhost:3000/', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({ question, answer }),\r\n        });\r\n\r\n        if (response.ok) {\r\n            console.log('Data successfully inserted into the database');\r\n        } else {\r\n            console.error('Error inserting data into the database');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={e => e.preventDefault()}>\r\n                <input type=\"text\" name=\"question\" value={form.question} onChange={handleChange} />\r\n                <input type=\"text\" name=\"answer\" value={form.answer} onChange={handleChange} />\r\n                <button type=\"button\" onClick={handleAddQuestion}>Add Question</button>\r\n            </form>\r\n            {dataToInsert && <button onClick={handleInsert}>Insert into Database</button>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MyComponent;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC;IAAEO,QAAQ,EAAE,EAAE;IAAEC,MAAM,EAAE;EAAG,CAAC,CAAC;EAC9D,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAEtD,MAAMW,YAAY,GAAIC,KAAK,IAAK;IAC5BN,OAAO,CAAC;MACJ,GAAGD,IAAI;MACP,CAACO,KAAK,CAACC,MAAM,CAACC,IAAI,GAAGF,KAAK,CAACC,MAAM,CAACE;IACtC,CAAC,CAAC;EACN,CAAC;EAED,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;IAC5BN,eAAe,CAACL,IAAI,CAAC;IACrBC,OAAO,CAAC;MAAEC,QAAQ,EAAE,EAAE;MAAEC,MAAM,EAAE;IAAG,CAAC,CAAC,CAAC,CAAC;EAC3C,CAAC;;EAED,MAAMS,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC7B,MAAM;MAAEV,QAAQ;MAAEC;IAAO,CAAC,GAAGC,YAAY;IAEzC,MAAMS,QAAQ,GAAG,MAAMC,KAAK,CAAC,wBAAwB,EAAE;MACnDC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEjB,QAAQ;QAAEC;MAAO,CAAC;IAC7C,CAAC,CAAC;IAEF,IAAIU,QAAQ,CAACO,EAAE,EAAE;MACbC,OAAO,CAACC,GAAG,CAAC,8CAA8C,CAAC;IAC/D,CAAC,MAAM;MACHD,OAAO,CAACE,KAAK,CAAC,wCAAwC,CAAC;IAC3D;EACJ,CAAC;EAED,oBACI1B,OAAA;IAAA2B,QAAA,gBACI3B,OAAA;MAAM4B,QAAQ,EAAEC,CAAC,IAAIA,CAAC,CAACC,cAAc,CAAC,CAAE;MAAAH,QAAA,gBACpC3B,OAAA;QAAO+B,IAAI,EAAC,MAAM;QAACnB,IAAI,EAAC,UAAU;QAACC,KAAK,EAAEV,IAAI,CAACE,QAAS;QAAC2B,QAAQ,EAAEvB;MAAa;QAAAwB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACnFpC,OAAA;QAAO+B,IAAI,EAAC,MAAM;QAACnB,IAAI,EAAC,QAAQ;QAACC,KAAK,EAAEV,IAAI,CAACG,MAAO;QAAC0B,QAAQ,EAAEvB;MAAa;QAAAwB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC/EpC,OAAA;QAAQ+B,IAAI,EAAC,QAAQ;QAACM,OAAO,EAAEvB,iBAAkB;QAAAa,QAAA,EAAC;MAAY;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrE,CAAC,EACN7B,YAAY,iBAAIP,OAAA;MAAQqC,OAAO,EAAEtB,YAAa;MAAAY,QAAA,EAAC;IAAoB;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5E,CAAC;AAEd;AAAClC,EAAA,CA5CQD,WAAW;AAAAqC,EAAA,GAAXrC,WAAW;AA8CpB,eAAeA,WAAW;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}